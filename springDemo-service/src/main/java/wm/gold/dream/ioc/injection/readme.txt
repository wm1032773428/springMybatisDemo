1,properties类型属性注入
2,集合类型属性注入
3,自动装配
4,收集容器中所有的bean注入map属性

自动装配
    no（默认）无自动装配。Bean引用必须由ref元素定义。不建议对较大的部署更改默认设置，因为明确指定协作者可以提供更好的控制和清晰度。在某种程度上，它记录了系统的结构。
    byName 按属性名称自动装配。Spring查找与需要自动装配的属性同名的bean。例如，如果bean定义按名称设置为autowire并且它包含一个master属性（即，它有一个 setMaster(..)方法），则Spring会查找名为bean的定义master并使用它来设置属性。
    byType 如果容器中只存在一个属性类型的bean，则允许自动装配属性。如果存在多个，则抛出致命异常，这表示您可能不会byType对该bean 使用自动装配。如果没有匹配的bean，则不会发生任何事情（未设置该属性）。
    constructor 类似byType但适用于构造函数参数。如果容器中没有构造函数参数类型的一个bean，则会引发致命错误。

    自动装配的局限性
    1,显式依赖项property和constructor-arg设置始终覆盖自动装配
    2,您不能自动装配简单属性，例如基元 Strings，和Classes（以及此类简单属性的数组）
    3,自动装配不如显式布线精确
    4,容器中的多个bean定义可能与要自动装配的setter方法或构造函数参数指定的类型匹配。对于数组，集合或 Map实例，这不一定是个问题。但是，对于期望单个值的依赖关系，这种模糊性不是任意解决的。如果没有可用的唯一bean定义，则抛出异常。

    如何防止自动装配不喜欢装配的对象
    将不需要进行自动装配的bean进行排除，对不需要进行自动装配的bean设置属性autowire-candidate=”false”，默认为true
    设置当发现有多个候选者的时候优先使用其中的哪个候选者，对要作为自动装配候选者的bean设置primary=”true”，默认为true